plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

version = project.version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "phase" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}

dependencies {

    minecraft "net.minecraft:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // ModMenu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    Set<String> modMenuDep = [ // and its dependencies
            "fabric-resource-loader-v0",
            "fabric-screen-api-v1",
            "fabric-key-binding-api-v1",
    ]
    modMenuDep.forEach {
        modImplementation(fabricApi.module(it, fabricApi_version))
    }

    // I will very likely use it later
    include(implementation "org.reflections:reflections:${reflections_version}")

    // Api modules needed for the mod
    Set<String> apiModules = [
            "fabric-api-base",
            "fabric-lifecycle-events-v1"
    ]

    // Add each module as a dependency
    apiModules.forEach {
        include(modImplementation(fabricApi.module(it, fabricApi_version)))
    }

}

processResources {
    def properties = [
            "version" : project.version,
            "minecraft_version" : project.minecraft_version,
            "loader_version" : project.loader_version
    ]

    inputs.properties(properties)
    filesMatching("fabric.mod.json") {
        expand(properties)
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    inputs.property "archivesName", project.base.archivesName

    from("LICENSE") {
        rename { "${it}_${inputs.properties.archivesName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
